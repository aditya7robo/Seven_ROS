<?xml version="1.0"?>
<launch>
	<arg name="enable_Laser" value="$(env SEVEN_LMS_ENABLED)"/>	
	<arg name="realsense_enabled" value="$(env SEVEN_REALSENSE_ENABLED)"/>
	<arg name="dual_realsense" default="true"/>
	<arg name="uavcanNs" value="/uavcanRosBridge"/>
	<arg name="publishcanTf" value="false"/>
	<arg name="motors_enabled" value="true"/>
	<arg name="delay" value="30"/>
	<arg name="camera_manager" value="cameraManager"/>
	<arg name="segmentation_manager" value="ompsManager"/>
	<arg name="baseFrame" value="base_link"/>
	<arg name="camera1" value="sensor_d415_right"/>
	<arg name="camera2" value="sensor_d415_left"/>
	<arg name="camera" value="camera"/>
	<arg name="left_camera" value="left"/>
	<arg name="right_camera" value="right"/>
	<arg name="localize" default="false"/>
	<arg name="test_navigation" default="false"/>
	
	<group if="$(arg dual_realsense)">
	<include file="$(find seven_robot_description)/launch/description.launch">
	 <arg name="simulation" default="false"/>
	 <arg name="camera_name_right" value="$(arg camera1)"/>
	 <arg name="camera_name_left" value="$(arg camera2)"/>
	 <arg name="dual_realsense" value="$(arg dual_realsense)"/>
	 </include>
	</group>

	<group unless="$(arg dual_realsense)">
	<include file="$(find seven_robot_description)/launch/description.launch">
	 <arg name="simulation" default="false"/>
	 <arg name="camera_name_right" value="$(arg right_camera)"/>
	 <arg name="camera_name_left" value="$(arg left_camera)"/>
	 <arg name="dual_realsense" value="$(arg dual_realsense)"/>
	 </include>
	</group>

	<group if="$(arg enable_Laser)">
	 <include file="$(find seven_robot_localization)/launch/sick_driver.launch"/>
 	 <!-- <include file="$(find seven_robot_base)/launch/laser_filters.launch"/> -->
 	</group>

	<group if="$(arg realsense_enabled)">
		<node pkg="nodelet" type="nodelet" name="$(arg camera_manager)" args="manager" output="screen"/>
		<group if="$(arg dual_realsense)">
			<include file="$(find seven_robot_base)/launch/dual_realsense.launch">
	 			<arg name="manager" value="/$(arg camera_manager)"/>
	 			<arg name="camera1" value="$(arg camera1)"/>
	  			<arg name="camera2" value="$(arg camera2)"/>
	  			<arg name="baseFrame" value="$(arg baseFrame)"/>
  			</include>	

	
			<!-- <include file="$(find timed_roslaunch)/timed_roslaunch.launch">
        		<arg name="time" value="5" />
        		<arg name="pkg" value="seven_depth_utils" />
        		<arg name="file" value="depth.launch" />
				<arg name="value" value="camera1Topic:=/$(arg camera1)/depth_registered/points 
					camera2Topic:=/$(arg camera2)/depth_registered/points baseFrame:=$(arg baseFrame)
					camera1Frame:=$(arg camera1)_depth_optical_frame camera2Frame:=$(arg camera2)_depth_optical_frame
					manager:=$(arg camera_manager)"/>
    			<arg name="node_name" value="timed_roslaunch" />
    		</include> -->
		</group>

		<group unless="$(arg dual_realsense)">
			<include file="$(find seven_robot_base)/launch/single_realsense.launch">
				<arg name="manager" value="/$(arg camera_manager)"/>
	 			<arg name="camera" value="$(arg camera)"/>
 			</include>
		</group>

	
		<!-- <node pkg="nodelet" type="nodelet" name="$(arg segmentation_manager)" args="manager" output="screen"/>
		<include file="$(find seven_robot_perception)/launch/organizedMultiPlaneSegmentation.launch">
	 		<arg name="manager" value="/$(arg segmentation_manager)"/>
     		<arg name="input_cloud" default="/$(arg camera)/depth_registered/points" unless="$(arg dual_realsense)"/>
			<arg name="input_cloud" default="/point_cloud_concat/output" if="$(arg dual_realsense)"/>
			<arg name="info_topic" default="/$(arg camera)/aligned_depth_to_color/camera_info" unless="$(arg dual_realsense)"/>
			<arg name="info_topic" default="/$(arg camera2)/aligned_depth_to_color/camera_info" if="$(arg dual_realsense)"/>
 		</include> -->
	</group>

	
  	<node pkg="joy" type="joy_node" name="joy_node">
		<rosparam file="$(find seven_robot_base)/params/system.yaml" command="load"/>
	</node>

	<node pkg="teleop_twist_joy" type="teleop_node" name="teleop_twist_joy"/>
	
	<group unless="$(arg localize)">
		<include file="$(find slam_toolbox)/launch/online_async.launch"/>	
	</group>
	
	<include file="$(find seven_robot_localization)/launch/seven_robot_localization.launch">
		<arg name="localize" value="$(arg localize)"/>
	</include>


  	<node pkg="diagnostic_aggregator" type="aggregator_node" name="diag_agg">
		<rosparam command="load" file="$(find seven_robot_base)/analyzers.yaml"/>
	</node>	
	
	<node name="robotParser" type="robotParser" pkg="seven_robot_description"/> 
	
	<node name="robot_state_publisher" type="robot_state_publisher" pkg="robot_state_publisher"/>
	
	<group if="$(arg localize)">
		<include file="$(find seven_robot_navigation)/launch/global_navigation.launch">
			<arg name="dual_realsense" value="$(arg dual_realsense)"/>
		</include>
	</group>
	
	<group>
    	<machine name="udooqdl" address="192.168.3.23" user="root" env-loader="/home/root/Seven_ROS/env_loader_udooqdl.sh" default="true"/>
	  	<rosparam file="$(find seven_robot_base)/params/robotParams.yaml" command="load" ns="$(arg uavcanNs)/uavcan_ros_bridge"/>
	  	<rosparam file="$(find seven_robot_localization)/params/diff_drive.yaml" command="load" ns="$(arg uavcanNs)/uavcan_ros_bridge"/>
	  	<include file="$(find uavcan_ros_bridge)/launch/uavcan_ros_bridge.launch">
	   		<arg name="uavcanNs" value="$(arg uavcanNs)"/>
	    	<arg name="laser_enabled" default="true"/>
	    	<arg name="publishuavcanTf" default="$(arg publishcanTf)"/>
	    	<arg name="enableMotors" default="$(arg motors_enabled)"/>
	  	</include>
	</group>
  
 </launch>
